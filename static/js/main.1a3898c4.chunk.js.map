{"version":3,"sources":["images/meme-bg.jpg","images/meme-duck.png","images/success.png","images/aliens.jpg","images/batman.jpg","images/crying.jpg","images/doge.jpg","images/fry.jpg","images/genius.jpg","images/grumpy.jpg","images/high.jpg","images/karen.jpg","images/man.jpg","images/nerd.jpg","images/yoda.jpg","components/Nav.js","components/Banner.js","components/Card.js","components/Content.js","components/Footer.js","components/CardsArray/cards.js","components/Page/index.js","App.js","index.js"],"names":["module","exports","Nav","props","class","score","topScore","image","require","image2","image3","style","banner","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","backgroundColor","Banner","className","text","src","alt","Card","handleClick","cardState","href","name","id","data-clicked","clicked","onClick","Content","cards","map","card","key","Footer","target","rel","Page","state","canClick","gotTopScore","setState","incorrectGuess","correctGuess","resetGame","resetClick","shuffleCards","result","scoreResult","gotTop","setTimeout","wonGame","newCards","shuffledCards","i","length","j","Math","floor","random","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a3898c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/meme-bg.16a78e9f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meme-duck.9371af2d.png\";","module.exports = __webpack_public_path__ + \"static/media/success.cedfcef4.png\";","module.exports = __webpack_public_path__ + \"static/media/aliens.63c4b5f6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/batman.d318f380.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crying.eddb5e2f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/doge.4c76e9f4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fry.d3526ba2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/genius.7dcdcec7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/grumpy.3dc6eb42.jpg\";","module.exports = __webpack_public_path__ + \"static/media/high.e5c203cf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/karen.8ff11eac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/man.6888c2e0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nerd.e19a07eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/yoda.6592af54.jpg\";","import React from \"react\";\n\nfunction Nav(props) {\n  return (\n    <header>\n      <div>\n        <h1>\n          Do you re<span>MEME</span>ber?\n        </h1>\n        <span>Click an image to begin!</span>\n      </div>\n      <div>\n        <h2>\n          <span class=\"scoreTxt\">\n            Score:\n            <span> {props.score}</span>\n          </span>{\" \"}\n          | Top Score: <span>{props.topScore}</span>\n        </h2>\n      </div>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nlet image = require(\"../images/meme-bg.jpg\");\nlet image2 = require(\"../images/meme-duck.png\");\nlet image3 = require(\"../images/success.png\");\n\nlet style = {\n  banner: {\n    backgroundImage: `url(${image}), url(${image2})`,\n    backgroundSize: \"460px, 150px\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"left 20px bottom, right -1px bottom -1px\",\n    backgroundColor: \"#65879d\"\n  }\n};\n\nfunction Banner(props) {\n  return (\n    <div className=\"banner\" style={style.banner}>\n      <p>{props.text}</p>\n      <img\n        src={image3}\n        class={props.topScore ? \"success moveIn\" : \"success\"}\n        alt=\"success baby meme\"\n      />\n    </div>\n  );\n}\n\nexport default Banner;\n","import React from \"react\";\n\nfunction Card(props) {\n  let { handleClick, ...cardState } = props;\n\n  return (\n    <div>\n      <img\n        src={props.href}\n        alt={props.name}\n        id={props.id}\n        data-clicked={props.clicked}\n        onClick={() => props.handleClick(cardState)}\n      />\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nfunction Content(props) {\n  return (\n    <section>\n      {props.cards.map(card => (\n        <Card\n          key={card.id}\n          id={card.id}\n          href={card.href}\n          name={card.name}\n          clicked={card.clicked}\n          handleClick={props.handleClick}\n        />\n      ))}\n    </section>\n  );\n}\n\nexport default Content;\n","import React from \"react\";\n\nfunction Footer(props) {\n  return (\n    <footer>\n      <h5>Gerard Pelly</h5>\n      <a\n        href=\"https://github.com/GerardWP/clickyGame\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <em>Do you reMEMEber?</em> Github Repositiory\n      </a>\n    </footer>\n  );\n}\n\nexport default Footer;\n","let cards = [\n  {\n    id: 1,\n    href: require(\"../../images/aliens.jpg\"),\n    clicked: false,\n    name: \"aliens\"\n  },\n  {\n    id: 2,\n    href: require(\"../../images/batman.jpg\"),\n    clicked: false,\n    name: \"batman\"\n  },\n  {\n    id: 3,\n    href: require(\"../../images/crying.jpg\"),\n    clicked: false,\n    name: \"crying\"\n  },\n  {\n    id: 4,\n    href: require(\"../../images/doge.jpg\"),\n    clicked: false,\n    name: \"doge\"\n  },\n  {\n    id: 5,\n    href: require(\"../../images/fry.jpg\"),\n    clicked: false,\n    name: \"fry\"\n  },\n  {\n    id: 6,\n    href: require(\"../../images/genius.jpg\"),\n    clicked: false,\n    name: \"genius\"\n  },\n  {\n    id: 7,\n    href: require(\"../../images/grumpy.jpg\"),\n    clicked: false,\n    name: \"grumpy\"\n  },\n  {\n    id: 8,\n    href: require(\"../../images/high.jpg\"),\n    clicked: false,\n    name: \"high\"\n  },\n  {\n    id: 9,\n    href: require(\"../../images/karen.jpg\"),\n    clicked: false,\n    name: \"karen\"\n  },\n  {\n    id: 10,\n    href: require(\"../../images/man.jpg\"),\n    clicked: false,\n    name: \"man\"\n  },\n  {\n    id: 11,\n    href: require(\"../../images/nerd.jpg\"),\n    clicked: false,\n    name: \"nerd\"\n  },\n  {\n    id: 12,\n    href: require(\"../../images/yoda.jpg\"),\n    clicked: false,\n    name: \"yoda\"\n  }\n];\n\nexport default cards;\n","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport Nav from \"../Nav\";\nimport Banner from \"../Banner\";\nimport Content from \"../Content\";\nimport Footer from \"../Footer\";\nimport cards from \"../CardsArray/cards\";\n\nclass Page extends Component {\n  // Setting Page component's initial state\n  state = {\n    score: 0,\n    canClick: true,\n    cards: cards,\n    topScore: 0,\n    gotTopScore: false,\n    text:\n      \"Click on an Image to earn points, but don't click on any more than once!\"\n  };\n\n  // function storing the card id and clicked boolean as variables.\n  // using a ternary statement to execute the correct function depending on the\n  // clicked status of the card.\n  // added canClick to prevent clicks on cards when no desired\n  handleClick = card => {\n    if (this.state.canClick) {\n      this.setState({ canClick: false });\n      const { id, clicked } = card;\n      clicked\n        ? this.state.score > this.state.topScore\n          ? this.incorrectGuess(true)\n          : this.incorrectGuess(false)\n        : this.correctGuess(id);\n    } else {\n      return;\n    }\n  };\n\n  // uses a map function to reset the clicked status of each card and returns the deck to be\n  // stored as a variable, then setting the state for a new game.\n  resetGame = () => {\n    const resetClick = this.state.cards.map(card => {\n      card.clicked = false;\n      return card;\n    });\n\n    this.setState({\n      score: 0,\n      canClick: true,\n      cards: this.shuffleCards(resetClick),\n      gotTopScore: false,\n      text:\n        \"Click on an Image to earn points, but don't click on any more than once!\"\n    });\n  };\n\n  // function that takes a boolean which is set to true if the player has clicked\n  // incorrectly, but set a top score - and to false if no top score.\n  // the state is then set accordingly, then reset for new game.\n  incorrectGuess = result => {\n    const text = result\n      ? \"You didn't reMEMEber them all, but you did set the Top Score. Nice one.\"\n      : \"Better luck next time. Always reMEMEber the good times.\";\n    const scoreResult = result ? this.state.score : this.state.topScore;\n    const gotTop = result ? true : false;\n    this.setState({\n      topScore: scoreResult,\n      gotTopScore: gotTop,\n      text: text\n    });\n\n    setTimeout(() => {\n      this.resetGame();\n    }, 2500);\n  };\n\n  // determines whether this is the winning correct guess, if so the wonGame sequence plays out\n  // if not, set the cards clicked boolean to true, shuffle the cards and set the state with shuffled cards\n  // and score + 1\n  correctGuess = id => {\n    if (this.state.score === 11) {\n      this.wonGame();\n    } else {\n      const newCards = this.state.cards.map(card => {\n        if (card.id === id) {\n          card.clicked = true;\n        }\n        return card;\n      });\n      const shuffledCards = this.shuffleCards(newCards);\n      this.setState({\n        canClick: true,\n        cards: shuffledCards,\n        score: this.state.score + 1\n      });\n    }\n  };\n\n  // sets winning state, then resetGame function.\n  wonGame = () => {\n    this.setState({\n      score: 12,\n      topScore: 12,\n      gotTopScore: true,\n      text: \"You reMEMbered them all! Well done, legend!\"\n    });\n    setTimeout(() => {\n      this.resetGame();\n    }, 2500);\n  };\n\n  // function that returns a shuffled deck of cards\n  shuffleCards = cards => {\n    for (let i = cards.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [cards[i], cards[j]] = [cards[j], cards[i]];\n    }\n    return cards;\n  };\n\n  render() {\n    return (\n      <div className=\"pageContent\">\n        <Nav score={this.state.score} topScore={this.state.topScore} />\n        <Banner text={this.state.text} topScore={this.state.gotTopScore} />\n        <Content cards={this.state.cards} handleClick={this.handleClick} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Page;\n","import React from \"react\";\nimport Page from \"./components/Page\";\n\nfunction App() {\n  return <Page />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}